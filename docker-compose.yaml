services:
  api:
    restart: unless-stopped
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    environment:
      # Frontend Configuration
      - FRONTEND_URL=${FRONTEND_URL}
      # Google Storage
      - GCS_PROJECT_ID=${GCS_PROJECT_ID}
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - GCS_KEY_FILE_CONTENT=${GCS_KEY_FILE_CONTENT}
      - GCS_KEY_FILE=/app/writable/gcs-credentials.json
      # Application Configuration
      - PORT=${API_PORT}
      - NODE_ENV=${NODE_ENV}
      # Database Configuration
      - DATABASE_URL=${DATABASE_URL}
      # reCAPTCHA Configuration
      - RECAPTCHA_SECRET_KEY=${RECAPTCHA_SECRET_KEY}
    networks:
      - monorepo_net
    depends_on:
      - postgres

  web:
    restart: unless-stopped
    build:
      context: .
      dockerfile: apps/web/Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
        - VITE_RECAPTCHA_SITE_KEY=${VITE_RECAPTCHA_SITE_KEY}
    ports:
      - '3000:3000'
    networks:
      - monorepo_net

  postgres:
    restart: unless-stopped
    image: postgres:17-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monorepo_net

networks:
  monorepo_net:
    driver: bridge

volumes:
  postgres_data:
